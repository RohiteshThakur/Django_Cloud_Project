Youtube link:  https://www.youtube.com/watch?v=2OD3oeodNms

$ sudo apt-get install python-pip
$ pip install --upgrade pip
$ pip install pip3
$ sudo pip install virtualenv

$ sudo apt-get install python3-dev libpq-dev				# These are dependencies for postgresql to work.


Create a virtual environment:
$ cd /media/redhat/apps/Django_Project
$ virtualenv -p /usr/bin/python3.5 my_env

Activate the virtual environment:
---------------------------------
redhat@ubuntu:/media/redhat/apps/Django_Project$ source my_env/bin/activate
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project$ 

Install Django:
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project$ pip install Django==1.8.18
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project$ pip install psycopg2

To un-install Django:
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project$ pip uninstall Django     [# don't use sudo]

Start Project:
--------------
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project$ django-admin.py startproject mysite


Install PostGreSQL:
-------------------
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project$ sudo apt-get install postgresql

(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project$ sudo -i -u postgres
postgres@ubuntu:~$ 


Create ADMIN user:
------------------
postgres@ubuntu:~$ createuser --interactive --pwprompt
Enter name of role to add: dbadmin
Enter password for new role: dbadmin
Enter it again: dbadmin
Shall the new role be a superuser? (y/n) y
postgres@ubuntu:~$ 


postgres@ubuntu:~$ createdb mysitedb
postgres@ubuntu:~$ 

postgres@ubuntu:~$ psql
psql (9.5.10)
Type "help" for help.

postgres=# grant all privileges on database mysitedb to dbadmin;
GRANT

postgres=# grant all privileges on database ratecarddb to dbadmin;
GRANT

Come back to virtual environment:
---------------------------------
postgres=# \q
postgres@ubuntu:~$ 

postgres@ubuntu:~$ exit
logout
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project$ 


Open mysite project in Sublime text:
------------------------------------
In settings.py, update:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'mysitedb',
        'USER': 'dbadmin',
        'PASSWORD': 'dbadmin',
        'HOST': 'localhost',
        'PORT': '',
    }
}

Comeback to console:
--------------------
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project/mysite$ python manage.py makemigrations
No changes detected

(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project/mysite$ python manage.py migrate
Operations to perform:
  Synchronize unmigrated apps: staticfiles, messages
  Apply all migrations: sessions, contenttypes, admin, auth
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  Rendering model states... DONE
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying sessions.0001_initial... OK


Run server:
-----------
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project/mysite$ python manage.py runserver
Performing system checks...

System check identified no issues (0 silenced).
January 25, 2018 - 17:33:33
Django version 1.8.18, using settings 'mysite.settings'
Starting development server at http://127.0.0.1:8000/


Open above URL in brower, to check if Django is responding.


==============================================================================================================

redhat@ubuntu:/media/redhat/apps/Django_Project$$ source my_env/bin/activate
$ python manage.py runserver


redhat@ubuntu:/media/redhat/apps/Django_Project$$ source my_env/bin/activate
$ cd mysite ; ls -l									                                                      <Access your project, and find manage.py>
$ (my_env)/media/redhat/apps/Django_Project/mysite$ python manage.py startapp cloudify 		<start app>
$ ls cloudify/
==============================================================================================================


(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project/mysite$ python manage.py makemigrations cloudify
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project/mysite$ python manage.py sqlmigrate cloudify 0001
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project/mysite$ python manage.py migrate

Create Superuser (Django Admin Site):
-------------------------------------
(my_env) redhat@ubuntu:/media/redhat/apps/Django_Project/mysite$ python manage.py createsuperuser
Username (leave blank to use 'redhat'): admin
Email address: rohiteshthakur@outlook.com
Password: adminpass
Password (again): adminpass
Superuser created successfully.









